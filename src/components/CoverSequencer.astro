---

---

<div id="gradientovervideo"></div>

<style is:global>
    .fadetransition {
        transition: all 2s ease-in-out;
    }
    .fadein {
        opacity: 1 !important;
    }
    .fadeout {
        opacity: 0 !important;
    }
    #gradientovervideo {
        position: fixed;
        right: 0px;
        top: 0px;
        width: 100%;
        height: 100vh;
        background-image: linear-gradient(
            65deg,
            #000000ff,
            #00000080,
            #00000000,
            #00000000
        );
        /* background-color: #00000048; */
        z-index: -1;
    }
</style>

<script is:inline>
    
    let coversequencer;
    let highlightitemIndex = 0;
    const highlightitems = document.querySelectorAll(
        ".Coverhighlights-informationsheet",
    );
    const counthighlightitems = highlightitems.length;

    let curretnhighlightitem = d3.select(`.Coverhighlights-informationsheet-highlightitem[data-index="${highlightitemIndex}"]` );

    // const uisequencer = d3.scaleLinear([0, 8000], [0, 100])
    let videoEle =
        document.getElementsByClassName("videocover")[highlightitemIndex];
    videoEle.play();
    videoEle.style.setProperty("opacity", "1.0");

    console.log( highlightitemIndex )
    d3.select('.Mainmenu').style('background-color', curretnhighlightitem.attr('data-backgroundcolor'))
    d3.selectAll('.Mainmenu--typo').style('color', curretnhighlightitem.attr('data-typographycolor'))
    
    curretnhighlightitem
        .select(".highlightitem-cursor")
        .transition()
        .duration(150)
        .style("left", "0%");
    curretnhighlightitem
        .select(".highlightitem-cursor")
        .transition()
        .ease(d3.easeLinear)
        .delay(200)
        .duration(7800)
        .style("left", "97%");


    function startSequencer() {
        coversequencer = setInterval(() => {
            //console.log(highlightitemIndex);

            videoEle =
                document.getElementsByClassName("videocover")[
                    highlightitemIndex
                ];
            videoEle.pause();
            videoEle.style.setProperty("opacity", "0.0");

            highlightitemIndex = (highlightitemIndex + 1) % counthighlightitems;
            

            videoEleNext =
                document.getElementsByClassName("videocover")[
                    highlightitemIndex
                ];
            videoEleNext.play();
            videoEleNext.style.setProperty("opacity", "1.0");

            curretnhighlightitem = d3.select(`.Coverhighlights-informationsheet-highlightitem[data-index="${highlightitemIndex}"]` );

            console.log( highlightitemIndex , curretnhighlightitem.attr('data-backgroundcolor') )
            d3.select('.Mainmenu').style('background-color', curretnhighlightitem.attr('data-backgroundcolor'))
            d3.selectAll('.Mainmenu--typo').style('color', curretnhighlightitem.attr('data-typographycolor'))

            d3.selectAll(".highlightitem-cursor")
                .transition()
                .duration(150)
                .style("left", "0%");
            curretnhighlightitem
                .select(".highlightitem-cursor")
                .transition()
                .delay(200)
                .ease(d3.easeLinear)
                .duration(7800)
                .style("left", "97%");

            d3.select(".Coverhighlights")
                .transition()
                .duration(600)
                .style("left", `${highlightitemIndex * -700}px`);

        }, 8000);
    }

    function pauseSequencer(e) {

        videoEle = document.getElementsByClassName("videocover")[highlightitemIndex];
        videoEle.pause();
        videoEle.style.setProperty("opacity", "0.0");


        highlightitemIndex = parseInt(e.getAttribute("data-index"));
        curretnhighlightitem = d3.select(`.Coverhighlights-informationsheet-highlightitem[data-index="${highlightitemIndex}"]` );
        clearInterval(coversequencer);

        d3.select('.Mainmenu').style('background-color', curretnhighlightitem.attr('data-backgroundcolor'))
        d3.selectAll('.Mainmenu--typo').style('color', curretnhighlightitem.attr('data-typographycolor'))

        videoEleNext = document.getElementsByClassName("videocover")[highlightitemIndex];
        videoEleNext.play();
        videoEleNext.style.setProperty("opacity", "1.0");

        d3.selectAll(".highlightitem-cursor")
            .transition()
            .duration(150)
            .style("left", "0%");

        curretnhighlightitem
            .select(".highlightitem-cursor")
            .transition()
            .ease(d3.easeLinear)
            .delay(200)
            .duration(7800)
            .style("left", "97%");

        d3.select(".Coverhighlights")
            .transition()
            .duration(600)
            .style("left", `${highlightitemIndex * -700}px`);

        startSequencer();
    }

    startSequencer();


    const toggleMute = () => {
        if ( document.getElementsByClassName("videocover")[0].muted ) {
            d3.selectAll('#icontogglemute').selectAll('.muted').attr('display', 'none')
            d3.selectAll('#icontogglemute').selectAll('.unmuted').attr('display', 'initial')
        } else {
            d3.selectAll('#icontogglemute').selectAll('.muted').attr('display', 'initial')
            d3.selectAll('#icontogglemute').selectAll('.unmuted').attr('display', 'none')
        }
        Array.from( document.getElementsByClassName("videocover") ).forEach(
            function(element, index, array) {
                element.muted = !element.muted;
            }
        );
    }
</script>
